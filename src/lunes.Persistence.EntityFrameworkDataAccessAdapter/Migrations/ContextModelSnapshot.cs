// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using lunes.Domain.Accounts;
using lunes.Persistence.EntityFrameworkDataAccessAdapter;

namespace lunes.Persistence.EntityFrameworkDataAccessAdapter.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("lunes.Domain.Accounts.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Balance");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("lunes.Domain.Accounts.Operation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AccountId");

                    b.Property<decimal>("Amount");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Name");

                    b.Property<int>("OperationNature");

                    b.Property<int>("OperationType");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Operations");

                    b.HasDiscriminator<int>("OperationType");
                });

            modelBuilder.Entity("lunes.Domain.Accounts.Expense", b =>
                {
                    b.HasBaseType("lunes.Domain.Accounts.Operation");

                    b.HasDiscriminator().HasValue(0);
                });

            modelBuilder.Entity("lunes.Domain.Accounts.Revenue", b =>
                {
                    b.HasBaseType("lunes.Domain.Accounts.Operation");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("lunes.Domain.Accounts.Transfer", b =>
                {
                    b.HasBaseType("lunes.Domain.Accounts.Operation");

                    b.Property<Guid>("FromAccountId");

                    b.Property<Guid>("ToAccountId");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("lunes.Domain.Accounts.Operation", b =>
                {
                    b.HasOne("lunes.Domain.Accounts.Account")
                        .WithMany("Operations")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
